-- Criar sequência
CREATE SEQUENCE EXPENSE_ENTRY_ID_SEQ START WITH 1;

CREATE TABLE IF NOT EXISTS EXPENSE_ENTRY (
    ID                BIGINT                  DEFAULT nextval('EXPENSE_ENTRY_ID_SEQ'),
    USER_ID           INTEGER        NOT NULL,
    ENTRY_DATE        DATE           NOT NULL,
    NAME              VARCHAR(100)   NOT NULL,
    CATEGORY_NAME     VARCHAR(100)   NOT NULL,
    SUPPLIER_NAME     VARCHAR(100),
    ENTRY_TYPE_ID     INTEGER        NOT NULL,
    STATUS_TYPE_ID    INTEGER        NOT NULL,
    PAYMENT_TYPE_ID   INTEGER        NOT NULL,
    PAYMENT_METHOD_ID INTEGER        NOT NULL,
    TOTAL_VALUE       DECIMAL(12, 3) NOT NULL,
    DESCRIPTION       TEXT,
    CREATE_TIME       TIMESTAMP      NOT NULL DEFAULT NOW(),
    UPDATE_TIME       TIMESTAMP      NOT NULL DEFAULT NOW(),
    PRIMARY KEY (ID, USER_ID, ENTRY_DATE),
    CONSTRAINT FK_USER_REGISTRATION FOREIGN KEY (USER_ID) REFERENCES USER_REGISTRATION(ID) ON DELETE CASCADE,
    CONSTRAINT FK_ENTRY_TYPE FOREIGN KEY (ENTRY_TYPE_ID) REFERENCES ENTRY_TYPE(ID),
    CONSTRAINT FK_STATUS_TYPE FOREIGN KEY (STATUS_TYPE_ID) REFERENCES STATUS_TYPE(ID),
    CONSTRAINT FK_PAYMENT_TYPE FOREIGN KEY (PAYMENT_TYPE_ID) REFERENCES PAYMENT_TYPE(ID),
    CONSTRAINT FK_PAYMENT_METHODS FOREIGN KEY (PAYMENT_METHOD_ID) REFERENCES PAYMENT_METHODS(ID)
) PARTITION BY RANGE (ENTRY_DATE);

-- Índices na tabela principal (tabela pai)
CREATE INDEX IDX_EXPENSE_ENTRY_USER_NAME ON EXPENSE_ENTRY(USER_ID, NAME);
CREATE INDEX IDX_EXPENSE_ENTRY_DT_EXPENSE ON EXPENSE_ENTRY(ENTRY_DATE);
CREATE INDEX IDX_EXPENSE_ENTRY_ENTRY_TYPE_ID ON EXPENSE_ENTRY(ENTRY_TYPE_ID);
CREATE INDEX IDX_EXPENSE_ENTRY_STATUS_TYPE_ID ON EXPENSE_ENTRY(STATUS_TYPE_ID);
CREATE INDEX IDX_EXPENSE_ENTRY_PAYMENT_METHOD_ID ON EXPENSE_ENTRY(PAYMENT_METHOD_ID);
CREATE INDEX IDX_EXPENSE_ENTRY_PAYMENT_TYPE_ID ON EXPENSE_ENTRY(PAYMENT_TYPE_ID);
CREATE INDEX IDX_EXPENSE_ENTRY_USER_CATEGORY_DATE ON EXPENSE_ENTRY(USER_ID, CATEGORY_NAME, ENTRY_DATE);
CREATE INDEX IDX_EXPENSE_ENTRY_USER_STATUS ON EXPENSE_ENTRY(USER_ID, STATUS_TYPE_ID);
CREATE INDEX IDX_EXPENSE_ENTRY_USER_ENTRY_TYPE_DATE ON EXPENSE_ENTRY(USER_ID, ENTRY_TYPE_ID, ENTRY_DATE);

-- Comentários na tabela
COMMENT ON TABLE EXPENSE_ENTRY IS 'Entrada das despesas';
COMMENT ON COLUMN EXPENSE_ENTRY.ID IS 'Id da despesa';
COMMENT ON COLUMN EXPENSE_ENTRY.USER_ID IS 'ID do usuário';
COMMENT ON COLUMN EXPENSE_ENTRY.ENTRY_DATE IS 'Data da despesa';
COMMENT ON COLUMN EXPENSE_ENTRY.NAME IS 'Nome da despesa';
COMMENT ON COLUMN EXPENSE_ENTRY.CATEGORY_NAME IS 'Nome da categoria da despesa';
COMMENT ON COLUMN EXPENSE_ENTRY.SUPPLIER_NAME IS 'Nome do fornecedor da despesa';
COMMENT ON COLUMN EXPENSE_ENTRY.ENTRY_TYPE_ID IS 'ID do tipo da despesa';
COMMENT ON COLUMN EXPENSE_ENTRY.STATUS_TYPE_ID IS 'ID do status da despesa';
COMMENT ON COLUMN EXPENSE_ENTRY.PAYMENT_TYPE_ID IS 'ID do tipo de pagamento da despesa';
COMMENT ON COLUMN EXPENSE_ENTRY.PAYMENT_METHOD_ID IS 'ID do método de pagamento da despesa';
COMMENT ON COLUMN EXPENSE_ENTRY.TOTAL_VALUE IS 'Valor total da despesa';
COMMENT ON COLUMN EXPENSE_ENTRY.DESCRIPTION IS 'Descrição da despesa';
COMMENT ON COLUMN EXPENSE_ENTRY.CREATE_TIME IS 'Data e hora do lançamento da despesa';
COMMENT ON COLUMN EXPENSE_ENTRY.UPDATE_TIME IS 'Data e hora da última alteração na despesa';

-- Partição para o ano de 2023
CREATE TABLE EXPENSE_ENTRY_2023 PARTITION OF EXPENSE_ENTRY
    FOR VALUES FROM ('2023-01-01') TO ('2023-12-31');

-- Partição para o ano de 2024
CREATE TABLE EXPENSE_ENTRY_2024 PARTITION OF EXPENSE_ENTRY
    FOR VALUES FROM ('2024-01-01') TO ('2024-12-31');

-- Partição para o ano de 2025
CREATE TABLE EXPENSE_ENTRY_2025 PARTITION OF EXPENSE_ENTRY
    FOR VALUES FROM ('2025-01-01') TO ('2025-12-31');

-- Partição para o ano de 2026
CREATE TABLE EXPENSE_ENTRY_2026 PARTITION OF EXPENSE_ENTRY
    FOR VALUES FROM ('2026-01-01') TO ('2026-12-31');

-- Partição para o ano de 2027
CREATE TABLE EXPENSE_ENTRY_2027 PARTITION OF EXPENSE_ENTRY
    FOR VALUES FROM ('2027-01-01') TO ('2027-12-31');

-- Partição para o ano de 2028
CREATE TABLE EXPENSE_ENTRY_2028 PARTITION OF EXPENSE_ENTRY
    FOR VALUES FROM ('2028-01-01') TO ('2028-12-31');

-- Índices nas partições

-- Índice para a partição de 2023
CREATE INDEX IDX_EXPENSE_ENTRY_2023_USER_NAME ON EXPENSE_ENTRY_2023(USER_ID, NAME);
CREATE INDEX IDX_EXPENSE_ENTRY_2023_DT_EXPENSE ON EXPENSE_ENTRY_2023(ENTRY_DATE);

-- Índice para a partição de 2024
CREATE INDEX IDX_EXPENSE_ENTRY_2024_USER_NAME ON EXPENSE_ENTRY_2024(USER_ID, NAME);
CREATE INDEX IDX_EXPENSE_ENTRY_2024_DT_EXPENSE ON EXPENSE_ENTRY_2024(ENTRY_DATE);

-- Índice para a partição de 2025
CREATE INDEX IDX_EXPENSE_ENTRY_2025_USER_NAME ON EXPENSE_ENTRY_2025(USER_ID, NAME);
CREATE INDEX IDX_EXPENSE_ENTRY_2025_DT_EXPENSE ON EXPENSE_ENTRY_2025(ENTRY_DATE);

-- Índice para a partição de 2026
CREATE INDEX IDX_EXPENSE_ENTRY_2026_USER_NAME ON EXPENSE_ENTRY_2026(USER_ID, NAME);
CREATE INDEX IDX_EXPENSE_ENTRY_2026_DT_EXPENSE ON EXPENSE_ENTRY_2026(ENTRY_DATE);

-- Índice para a partição de 2027
CREATE INDEX IDX_EXPENSE_ENTRY_2027_USER_NAME ON EXPENSE_ENTRY_2027(USER_ID, NAME);
CREATE INDEX IDX_EXPENSE_ENTRY_2027_DT_EXPENSE ON EXPENSE_ENTRY_2027(ENTRY_DATE);

-- Índice para a partição de 2028
CREATE INDEX IDX_EXPENSE_ENTRY_2028_USER_NAME ON EXPENSE_ENTRY_2028(USER_ID, NAME);
CREATE INDEX IDX_EXPENSE_ENTRY_2028_DT_EXPENSE ON EXPENSE_ENTRY_2028(ENTRY_DATE);
